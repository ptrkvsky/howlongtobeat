{"version":3,"file":"workbox-9a8b0a38.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-strategies/NetworkOnly.js","node_modules/workbox-core/clientsClaim.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.4.1'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.4.1'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.4.1'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({\n            timeoutId,\n            request,\n            logs,\n            handler,\n        });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return ((await handler.waitUntil(Promise.race(promises))) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                (await networkPromise));\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler, }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler, }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            if (fetchError instanceof Error) {\n                error = fetchError;\n            }\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` + ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [\n                handler.fetch(request),\n            ];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","classNameStr","expectedClassName","isReturnValueProblem","expectedMethod","entry","firstEntry","secondEntry","thrownErrorMessage","cacheNameId","name","methodName","expectedClass","normalizedRangeHeader","size","start","end","url","message","status","cacheName","origin","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","toString","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","msg","err","reject","_catchHandler","catch","catchErr","matchResult","length","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","cacheOkAndOpaquePlugin","cacheWillUpdate","response","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","assign","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","promise","resolve","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","cachedResponse","effectiveRequest","getCacheKey","multiMatchOptions","caches","vary","headers","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","state","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","NetworkFirst","some","p","unshift","_networkTimeoutSeconds","networkTimeoutSeconds","logs","promises","timeoutId","id","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","fetchError","clearTimeout","NetworkOnly","clientsClaim","clients","claim"],"mappings":";;IAEA,IAAI;MACAA,IAAI,CAAC,oBAAD,CAAJ,IAA8BC,CAAC,EAA/B;IACH,CAFD,CAGA,OAAOC,CAAP,EAAU;;ICLV;IACA;IACA;IACA;IACA;IACA;IAEA,MAAMC,MAAM,GAEN,CAAC,MAAM;;;MAGL,IAAI,EAAE,2BAA2BH,IAA7B,CAAJ,EAAwC;QACpCA,IAAI,CAACI,qBAAL,GAA6B,KAA7B;;;MAEJ,IAAIC,OAAO,GAAG,KAAd;MACA,MAAMC,gBAAgB,GAAG;QACrBC,KAAK,EAAG,SADa;QAErBC,GAAG,EAAG,SAFe;QAGrBC,IAAI,EAAG,SAHc;QAIrBC,KAAK,EAAG,SAJa;QAKrBC,cAAc,EAAG,SALI;QAMrBC,QAAQ,EAAE,IANW;;OAAzB;;MAQA,MAAMC,KAAK,GAAG,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;QAClC,IAAIf,IAAI,CAACI,qBAAT,EAAgC;UAC5B;;;QAEJ,IAAIU,MAAM,KAAK,gBAAf,EAAiC;;;UAG7B,IAAI,iCAAiCE,IAAjC,CAAsCC,SAAS,CAACC,SAAhD,CAAJ,EAAgE;YAC5DC,OAAO,CAACL,MAAD,CAAP,CAAgB,GAAGC,IAAnB;YACA;;;;QAGR,MAAMK,MAAM,GAAG,CACV,eAAcd,gBAAgB,CAACQ,MAAD,CAAS,EAD7B,EAEV,sBAFU,EAGV,cAHU,EAIV,mBAJU,EAKV,oBALU,CAAf,CAZkC;;QAoBlC,MAAMO,SAAS,GAAGhB,OAAO,GAAG,EAAH,GAAQ,CAAC,WAAD,EAAce,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAd,CAAjC;QACAH,OAAO,CAACL,MAAD,CAAP,CAAgB,GAAGO,SAAnB,EAA8B,GAAGN,IAAjC;;QACA,IAAID,MAAM,KAAK,gBAAf,EAAiC;UAC7BT,OAAO,GAAG,IAAV;;;QAEJ,IAAIS,MAAM,KAAK,UAAf,EAA2B;UACvBT,OAAO,GAAG,KAAV;;OA1BR,CAfK;;;MA6CL,MAAMkB,GAAG,GAAG,EAAZ;MACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYpB,gBAAZ,CAAtB;;MACA,KAAK,MAAMqB,GAAX,IAAkBH,aAAlB,EAAiC;QAC7B,MAAMV,MAAM,GAAGa,GAAf;;QACAJ,GAAG,CAACT,MAAD,CAAH,GAAc,CAAC,GAAGC,IAAJ,KAAa;UACvBF,KAAK,CAACC,MAAD,EAASC,IAAT,CAAL;SADJ;;;MAIJ,OAAOQ,GAAP;IACH,CAtDC,GAFN;;ICPA;IACA;AACA;IACA;IACA;IACA;IACA;IAEO,MAAMK,UAAQ,GAAG;MACpB,iBAAiB,CAAC;QAAEC,SAAF;QAAaC,qBAAb;QAAoCC;OAArC,KAAiD;QAC9D,IAAI,CAACF,SAAD,IAAc,CAACC,qBAAnB,EAA0C;UACtC,MAAM,IAAIE,KAAJ,CAAW,4CAAX,CAAN;;;QAEJ,OAAS,QAAOH,SAAU,wCAAlB,GACH,qBAAoBC,qBAAsB,uBADvC,GAEH,GAAEG,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAsB,GAF7B;OALgB;MASpB,gBAAgB,CAAC;QAAEI,UAAF;QAAcC,SAAd;QAAyBC,QAAzB;QAAmCR;OAApC,KAAoD;QAChE,IAAI,CAACM,UAAD,IAAe,CAACC,SAAhB,IAA6B,CAACC,QAA9B,IAA0C,CAACR,SAA/C,EAA0D;UACtD,MAAM,IAAIG,KAAJ,CAAW,2CAAX,CAAN;;;QAEJ,OAAS,kBAAiBH,SAAU,gBAA5B,GACH,IAAGM,UAAW,IAAGC,SAAU,IAAGC,QAAS,uBAD5C;OAbgB;MAgBpB,kBAAkB,CAAC;QAAEC,YAAF;QAAgBT,SAAhB;QAA2BM,UAA3B;QAAuCC,SAAvC;QAAkDC;OAAnD,KAAmE;QACjF,IAAI,CAACC,YAAD,IAAiB,CAACT,SAAlB,IAA+B,CAACM,UAAhC,IAA8C,CAACE,QAAnD,EAA6D;UACzD,MAAM,IAAIL,KAAJ,CAAW,6CAAX,CAAN;;;QAEJ,MAAMO,YAAY,GAAGH,SAAS,GAAI,GAAEA,SAAU,GAAhB,GAAqB,EAAnD;QACA,OAAS,kBAAiBP,SAAU,gBAA5B,GACH,IAAGM,UAAW,IAAGI,YAAa,EAD3B,GAEH,GAAEF,QAAS,uBAAsBC,YAAa,GAFnD;OArBgB;MAyBpB,mBAAmB,CAAC;QAAEE,iBAAF;QAAqBX,SAArB;QAAgCM,UAAhC;QAA4CC,SAA5C;QAAuDC,QAAvD;QAAiEI;OAAlE,KAA8F;QAC7G,IAAI,CAACD,iBAAD,IAAsB,CAACL,UAAvB,IAAqC,CAACE,QAA1C,EAAoD;UAChD,MAAM,IAAIL,KAAJ,CAAW,8CAAX,CAAN;;;QAEJ,MAAMO,YAAY,GAAGH,SAAS,GAAI,GAAEA,SAAU,GAAhB,GAAqB,EAAnD;;QACA,IAAIK,oBAAJ,EAA0B;UACtB,OAAS,wBAAD,GACH,IAAGN,UAAW,IAAGI,YAAa,GAAEF,QAAS,MADtC,GAEH,gCAA+BG,iBAAkB,GAFtD;;;QAIJ,OAAS,kBAAiBX,SAAU,gBAA5B,GACH,IAAGM,UAAW,IAAGI,YAAa,GAAEF,QAAS,MADtC,GAEH,gCAA+BG,iBAAkB,GAFtD;OAnCgB;MAuCpB,oBAAoB,CAAC;QAAEE,cAAF;QAAkBb,SAAlB;QAA6BM,UAA7B;QAAyCC,SAAzC;QAAoDC;OAArD,KAAqE;QACrF,IAAI,CAACK,cAAD,IACA,CAACb,SADD,IAEA,CAACM,UAFD,IAGA,CAACC,SAHD,IAIA,CAACC,QAJL,EAIe;UACX,MAAM,IAAIL,KAAJ,CAAW,+CAAX,CAAN;;;QAEJ,OAAS,GAAEG,UAAW,IAAGC,SAAU,IAAGC,QAAS,kBAAvC,GACH,IAAGR,SAAU,4BAA2Ba,cAAe,WAD5D;OA/CgB;MAkDpB,qCAAqC,CAAC;QAAEC;OAAH,KAAe;QAChD,OAAS,oCAAD,GACH,qEADG,GAEH,IAAGV,IAAI,CAACC,SAAL,CAAeS,KAAf,CAAsB,iDAFtB,GAGH,sEAHG,GAIH,kBAJL;OAnDgB;MAyDpB,yCAAyC,CAAC;QAAEC,UAAF;QAAcC;OAAf,KAAiC;QACtE,IAAI,CAACD,UAAD,IAAe,CAACC,WAApB,EAAiC;UAC7B,MAAM,IAAIb,KAAJ,CAAW,sBAAD,GAA0B,8CAApC,CAAN;;;QAEJ,OAAS,+BAAD,GACH,uEADG,GAEH,GAAEY,UAAW,8CAFV,GAGH,qEAHG,GAIH,iBAJL;OA7DgB;MAmEpB,mCAAmC,CAAC;QAAEE;OAAH,KAA4B;QAC3D,IAAI,CAACA,kBAAL,EAAyB;UACrB,MAAM,IAAId,KAAJ,CAAW,sBAAD,GAA0B,2CAApC,CAAN;;;QAEJ,OAAS,gEAAD,GACH,kCAAiCc,kBAAmB,IADzD;OAvEgB;MA0EpB,sBAAsB,CAAC;QAAEC,WAAF;QAAehB;OAAhB,KAA4B;QAC9C,IAAI,CAACgB,WAAL,EAAkB;UACd,MAAM,IAAIf,KAAJ,CAAW,yDAAX,CAAN;;;QAEJ,OAAS,gEAAD,GACH,oBAAmBe,WAAY,iCAD5B,GAEH,IAAGd,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAsB,GAF9B;OA9EgB;MAkFpB,8CAA8C,CAAC;QAAEjB;OAAH,KAAgB;QAC1D,IAAI,CAACA,MAAL,EAAa;UACT,MAAM,IAAIkB,KAAJ,CAAW,sBAAD,GACX,qDADC,CAAN;;;QAGJ,OAAS,4DAAD,GACH,mCAAkClB,MAAO,IAD9C;OAvFgB;MA0FpB,yCAAyC,MAAM;QAC3C,OAAS,2DAAD,GACH,aADL;OA3FgB;MA8FpB,uBAAuB,CAAC;QAAEkC;OAAH,KAAc;QACjC,OAAQ,wCAAuCA,IAAK,WAApD;OA/FgB;MAiGpB,wBAAwB,CAAC;QAAEA;OAAH,KAAc;QAClC,OAAS,mBAAkBA,IAAK,2BAAxB,GACH,mEADL;OAlGgB;MAqGpB,gCAAgC,CAAC;QAAEC,UAAF;QAAcpB;OAAf,KAA+B;QAC3D,OAAS,QAAOoB,UAAW,uCAAnB,GACH,IAAGpB,SAAU,+BADlB;OAtGgB;MAyGpB,0BAA0B,CAAC;QAAEM,UAAF;QAAcC,SAAd;QAAyBC,QAAzB;QAAmCR;OAApC,KAAoD;QAC1E,OAAS,iBAAgBA,SAAU,uCAA3B,GACH,6BAA4BM,UAAW,IAAGC,SAAU,IAAGC,QAAS,OAD7D,GAEH,oBAFL;OA1GgB;MA8GpB,sBAAsB,CAAC;QAAEN,KAAF;QAASmB,aAAT;QAAwBf,UAAxB;QAAoCC,SAApC;QAA+CC,QAA/C;QAAyDR;OAA1D,KAA2E;QAC7F,OAAS,iBAAgBA,SAAU,kCAA3B,GACH,IAAGqB,aAAc,wBAAuBjB,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAsB,MAD3D,GAEH,4BAA2BI,UAAW,IAAGC,SAAU,IAAGC,QAAS,KAF5D,GAGH,mBAHL;OA/GgB;MAoHpB,+BAA+B,CAAC;QAAEF,UAAF;QAAcC,SAAd;QAAyBC;OAA1B,KAAyC;QACpE,OAAS,kEAAD,GACH,MAAKF,UAAW,IAAGC,SAAU,IAAGC,QAAS,EAD9C;OArHgB;MAwHpB,gCAAgC,CAAC;QAAEF,UAAF;QAAcC,SAAd;QAAyBC;OAA1B,KAAyC;QACrE,OAAS,0DAAD,GACH,MAAKF,UAAW,IAAGC,SAAU,IAAGC,QAAS,EAD9C;OAzHgB;MA4HpB,kBAAkB,CAAC;QAAEF,UAAF;QAAcE,QAAd;QAAwBR;OAAzB,KAAyC;QACvD,IAAI,CAACA,SAAD,IAAc,CAACM,UAAf,IAA6B,CAACE,QAAlC,EAA4C;UACxC,MAAM,IAAIL,KAAJ,CAAW,6CAAX,CAAN;;;QAEJ,OAAS,4BAA2BH,SAAU,8BAAtC,GACH,sEADG,GAEH,2BAA0BM,UAAW,IAAGE,QAAS,SAF9C,GAGH,YAHL;OAhIgB;MAqIpB,yBAAyB,MAAM;QAC3B,OAAS,gDAAD,GACH,gCADL;OAtIgB;MAyIpB,mCAAmC,MAAM;QACrC,OAAS,4DAAD,GACH,kDADL;OA1IgB;MA6IpB,6BAA6B,MAAM;QAC/B,OAAS,yDAAD,GACH,oDADL;OA9IgB;MAiJpB,sBAAsB,CAAC;QAAEc;OAAH,KAA+B;QACjD,IAAI,CAACA,qBAAL,EAA4B;UACxB,MAAM,IAAInB,KAAJ,CAAW,iDAAX,CAAN;;;QAEJ,OAAS,iEAAD,GACH,kCAAiCmB,qBAAsB,GAD5D;OArJgB;MAwJpB,qBAAqB,CAAC;QAAEA;OAAH,KAA+B;QAChD,IAAI,CAACA,qBAAL,EAA4B;UACxB,MAAM,IAAInB,KAAJ,CAAW,gDAAX,CAAN;;;QAEJ,OAAS,gEAAD,GACH,+DADG,GAEH,IAAGmB,qBAAsB,GAF9B;OA5JgB;MAgKpB,wBAAwB,CAAC;QAAEA;OAAH,KAA+B;QACnD,IAAI,CAACA,qBAAL,EAA4B;UACxB,MAAM,IAAInB,KAAJ,CAAW,mDAAX,CAAN;;;QAEJ,OAAS,kEAAD,GACH,+DADG,GAEH,IAAGmB,qBAAsB,GAF9B;OApKgB;MAwKpB,mBAAmB,MAAM;QACrB,OAAQ,oDAAR;OAzKgB;MA2KpB,yBAAyB,CAAC;QAAEC,IAAF;QAAQC,KAAR;QAAeC;OAAhB,KAA0B;QAC/C,OAAS,cAAaD,KAAM,cAAaC,GAAI,4BAArC,GACH,oDAAmDF,IAAK,SAD7D;OA5KgB;MA+KpB,oCAAoC,CAAC;QAAEG,GAAF;QAAOzC;OAAR,KAAqB;QACrD,OAAS,oBAAmByC,GAAI,sBAAqBzC,MAAO,gBAApD,GACH,oCADL;OAhLgB;MAmLpB,8BAA8B,CAAC;QAAEyC;OAAH,KAAa;QACvC,OAAS,kCAAiCA,GAAI,6BAAtC,GACH,UADL;OApLgB;MAuLpB,eAAe,CAAC;QAAEA,GAAF;QAAO7C;OAAR,KAAoB;QAC/B,IAAI8C,OAAO,GAAI,mDAAkDD,GAAI,IAArE;;QACA,IAAI7C,KAAJ,EAAW;UACP8C,OAAO,IAAK,4BAA2B9C,KAAM,GAA7C;;;QAEJ,OAAO8C,OAAP;OA5LgB;MA8LpB,2BAA2B,CAAC;QAAED,GAAF;QAAOE;OAAR,KAAqB;QAC5C,OAAS,+BAA8BF,GAAI,UAAnC,IACHE,MAAM,GAAI,2BAA0BA,MAAO,GAArC,GAA2C,GAD9C,CAAR;OA/LgB;MAkMpB,qBAAqB,CAAC;QAAEF;OAAH,KAAa;QAC9B,OAAS,4BAA2BA,GAAI,iCAAhC,GACH,gEADL;OAnMgB;MAsMpB,6CAA6C,CAAC;QAAEA;OAAH,KAAa;QACtD,OAAS,+BAAD,GACH,uEADG,GAEH,GAAEA,GAAI,8DAFX;OAvMgB;MA2MpB,0BAA0B,CAAC;QAAEG,SAAF;QAAaH;OAAd,KAAwB;QAC9C,OAAQ,0CAAyCG,SAAU,QAAOH,GAAI,GAAtE;OA5MgB;MA8MpB,8BAA8B,CAAC;QAAEI;OAAH,KAAgB;QAC1C,OAAS,gEAAD,GACH,mDAAkDA,MAAO,GAD9D;;IA/MgB,CAAjB;;ICRP;IACA;AACA;IACA;IACA;IACA;IACA;;IAUA,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,OAAO,GAAG,EAAjB,KAAwB;MAC9C,MAAMN,OAAO,GAAG5B,UAAQ,CAACiC,IAAD,CAAxB;;MACA,IAAI,CAACL,OAAL,EAAc;QACV,MAAM,IAAIxB,KAAJ,CAAW,oCAAmC6B,IAAK,IAAnD,CAAN;;;MAEJ,OAAOL,OAAO,CAACM,OAAD,CAAd;IACH,CAND;;IAOO,MAAMC,gBAAgB,GAAsDH,iBAA5E;;ICvBP;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAMI,YAAN,SAA2BhC,KAA3B,CAAiC;;IAEjC;IACA;IACA;IACA;IACA;IACA;IACA;MACIiC,WAAW,CAACC,SAAD,EAAYJ,OAAZ,EAAqB;QAC5B,MAAMN,OAAO,GAAGO,gBAAgB,CAACG,SAAD,EAAYJ,OAAZ,CAAhC;QACA,MAAMN,OAAN;QACA,KAAKR,IAAL,GAAYkB,SAAZ;QACA,KAAKJ,OAAL,GAAeA,OAAf;;;IAbyB;;IClBjC;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAMK,OAAO,GAAG,CAACpC,KAAD,EAAQ+B,OAAR,KAAoB;MAChC,IAAI,CAACM,KAAK,CAACD,OAAN,CAAcpC,KAAd,CAAL,EAA2B;QACvB,MAAM,IAAIiC,YAAJ,CAAiB,cAAjB,EAAiCF,OAAjC,CAAN;;IAEP,CAJD;;IAKA,MAAMO,SAAS,GAAG,CAACC,MAAD,EAAS5B,cAAT,EAAyBoB,OAAzB,KAAqC;MACnD,MAAMS,IAAI,GAAG,OAAOD,MAAM,CAAC5B,cAAD,CAA1B;;MACA,IAAI6B,IAAI,KAAK,UAAb,EAAyB;QACrBT,OAAO,CAAC,gBAAD,CAAP,GAA4BpB,cAA5B;QACA,MAAM,IAAIsB,YAAJ,CAAiB,kBAAjB,EAAqCF,OAArC,CAAN;;IAEP,CAND;;IAOA,MAAMU,MAAM,GAAG,CAACF,MAAD,EAAShC,YAAT,EAAuBwB,OAAvB,KAAmC;MAC9C,IAAI,OAAOQ,MAAP,KAAkBhC,YAAtB,EAAoC;QAChCwB,OAAO,CAAC,cAAD,CAAP,GAA0BxB,YAA1B;QACA,MAAM,IAAI0B,YAAJ,CAAiB,gBAAjB,EAAmCF,OAAnC,CAAN;;IAEP,CALD;;IAMA,MAAMW,UAAU,GAAG,CAACH,MAAD;IAEnB;IACApB,aAHmB,EAGJY,OAHI,KAGQ;MACvB,IAAI,EAAEQ,MAAM,YAAYpB,aAApB,CAAJ,EAAwC;QACpCY,OAAO,CAAC,mBAAD,CAAP,GAA+BZ,aAAa,CAACF,IAA7C;QACA,MAAM,IAAIgB,YAAJ,CAAiB,iBAAjB,EAAoCF,OAApC,CAAN;;IAEP,CARD;;IASA,MAAMY,OAAO,GAAG,CAAC3C,KAAD,EAAQ4C,WAAR,EAAqBb,OAArB,KAAiC;MAC7C,IAAI,CAACa,WAAW,CAACC,QAAZ,CAAqB7C,KAArB,CAAL,EAAkC;QAC9B+B,OAAO,CAAC,uBAAD,CAAP,GAAoC,oBAAmB7B,IAAI,CAACC,SAAL,CAAeyC,WAAf,CAA4B,GAAnF;QACA,MAAM,IAAIX,YAAJ,CAAiB,eAAjB,EAAkCF,OAAlC,CAAN;;IAEP,CALD;;IAMA,MAAMe,cAAc,GAAG,CAAC9C,KAAD;IAEvBmB,aAFuB;IAGvBY,OAHuB,KAGX;MACR,MAAMpD,KAAK,GAAG,IAAIsD,YAAJ,CAAiB,oBAAjB,EAAuCF,OAAvC,CAAd;;MACA,IAAI,CAACM,KAAK,CAACD,OAAN,CAAcpC,KAAd,CAAL,EAA2B;QACvB,MAAMrB,KAAN;;;MAEJ,KAAK,MAAMoE,IAAX,IAAmB/C,KAAnB,EAA0B;QACtB,IAAI,EAAE+C,IAAI,YAAY5B,aAAlB,CAAJ,EAAsC;UAClC,MAAMxC,KAAN;;;IAGX,CAbD;;IAcA,MAAMqE,kBAAkB,GAElB;MACEV,SADF;MAEEF,OAFF;MAGEM,UAHF;MAIEC,OAJF;MAKEF,MALF;MAMEK;IANF,CAFN;;IC5DA,IAAI;MACA7E,IAAI,CAAC,uBAAD,CAAJ,IAAiCC,CAAC,EAAlC;IACH,CAFD,CAGA,OAAOC,CAAP,EAAU;;ICLV;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACO,MAAM8E,aAAa,GAAG,KAAtB;IACP;IACA;IACA;IACA;IACA;IACA;IACA;;IACO,MAAMC,YAAY,GAAG,CACxB,QADwB,EAExB,KAFwB,EAGxB,MAHwB,EAIxB,OAJwB,EAKxB,MALwB,EAMxB,KANwB,CAArB;;ICxBP;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;;IACO,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;MACzC,IAAIA,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAAlC,EAA4C;QACG;UACvCC,kBAAM,CAACf,SAAP,CAAiBc,OAAjB,EAA0B,QAA1B,EAAoC;YAChChD,UAAU,EAAE,iBADoB;YAEhCC,SAAS,EAAE,OAFqB;YAGhCC,QAAQ,EAAE,aAHsB;YAIhCR,SAAS,EAAE;WAJf;;;QAOJ,OAAOsD,OAAP;OATJ,MAWK;QAC0C;UACvCC,kBAAM,CAACZ,MAAP,CAAcW,OAAd,EAAuB,UAAvB,EAAmC;YAC/BhD,UAAU,EAAE,iBADmB;YAE/BC,SAAS,EAAE,OAFoB;YAG/BC,QAAQ,EAAE,aAHqB;YAI/BR,SAAS,EAAE;WAJf;;;QAOJ,OAAO;UAAEwD,MAAM,EAAEF;SAAjB;;IAEP,CAvBM;;IChBP;IACA;AACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAMG,KAAN,CAAY;;IAEZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIrB,WAAW,CAACsB,KAAD,EAAQJ,OAAR,EAAiBrE,MAAM,GAAGkE,aAA1B,EAAyC;QACL;UACvCI,kBAAM,CAACZ,MAAP,CAAce,KAAd,EAAqB,UAArB,EAAiC;YAC7BpD,UAAU,EAAE,iBADiB;YAE7BC,SAAS,EAAE,OAFkB;YAG7BC,QAAQ,EAAE,aAHmB;YAI7BR,SAAS,EAAE;WAJf;;UAMA,IAAIf,MAAJ,EAAY;YACRsE,kBAAM,CAACV,OAAP,CAAe5D,MAAf,EAAuBmE,YAAvB,EAAqC;cAAEpD,SAAS,EAAE;aAAlD;;SATwC;;;;QAchD,KAAKsD,OAAL,GAAeD,gBAAgB,CAACC,OAAD,CAA/B;QACA,KAAKI,KAAL,GAAaA,KAAb;QACA,KAAKzE,MAAL,GAAcA,MAAd;;;IAGR;IACA;IACA;IACA;;;MACI0E,eAAe,CAACL,OAAD,EAAU;QACrB,KAAKM,YAAL,GAAoBP,gBAAgB,CAACC,OAAD,CAApC;;;IApCI;;ICpBZ;IACA;AACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAMO,WAAN,SAA0BJ,KAA1B,CAAgC;;IAEhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIrB,WAAW,CAAC0B,MAAD,EAASR,OAAT,EAAkBrE,MAAlB,EAA0B;QACU;UACvCsE,kBAAM,CAACX,UAAP,CAAkBkB,MAAlB,EAA0BC,MAA1B,EAAkC;YAC9BzD,UAAU,EAAE,iBADkB;YAE9BC,SAAS,EAAE,aAFmB;YAG9BC,QAAQ,EAAE,aAHoB;YAI9BR,SAAS,EAAE;WAJf;;;QAOJ,MAAM0D,KAAK,GAAG,CAAC;UAAEhC;SAAH,KAAa;UACvB,MAAMsC,MAAM,GAAGF,MAAM,CAACG,IAAP,CAAYvC,GAAG,CAACwC,IAAhB,CAAf,CADuB;;UAGvB,IAAI,CAACF,MAAL,EAAa;YACT;WAJmB;;;;;;UAUvB,IAAItC,GAAG,CAACI,MAAJ,KAAeqC,QAAQ,CAACrC,MAAxB,IAAkCkC,MAAM,CAACI,KAAP,KAAiB,CAAvD,EAA0D;YACX;cACvC9F,MAAM,CAACI,KAAP,CAAc,2BAA0BoF,MAAM,CAACO,QAAP,EAAkB,2BAA7C,GACR,iCAAgC3C,GAAG,CAAC2C,QAAJ,EAAe,6BADvC,GAER,4DAFL;;;YAIJ;WAhBmB;;;;;;UAsBvB,OAAOL,MAAM,CAACM,KAAP,CAAa,CAAb,CAAP;SAtBJ;;QAwBA,MAAMZ,KAAN,EAAaJ,OAAb,EAAsBrE,MAAtB;;;IA/CwB;;ICxBhC;IACA;AACA;IACA;IACA;IACA;IACA;;IAEA,MAAMsF,cAAc,GAAI7C,GAAD,IAAS;MAC5B,MAAM8C,MAAM,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAAChD,GAAD,CAAd,EAAqByC,QAAQ,CAACD,IAA9B,CAAf,CAD4B;;;MAI5B,OAAOM,MAAM,CAACN,IAAP,CAAYS,OAAZ,CAAoB,IAAIZ,MAAJ,CAAY,IAAGI,QAAQ,CAACrC,MAAO,EAA/B,CAApB,EAAuD,EAAvD,CAAP;IACH,CALD;;ICRA;IACA;AACA;IACA;IACA;IACA;IACA;IAQA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAM8C,MAAN,CAAa;;IAEb;IACA;MACIxC,WAAW,GAAG;QACV,KAAKyC,OAAL,GAAe,IAAIC,GAAJ,EAAf;QACA,KAAKC,kBAAL,GAA0B,IAAID,GAAJ,EAA1B;;;IAGR;IACA;IACA;IACA;;;MACc,IAANE,MAAM,GAAG;QACT,OAAO,KAAKH,OAAZ;;;IAGR;IACA;IACA;;;MACII,gBAAgB,GAAG;;QAEf9G,IAAI,CAAC+G,gBAAL,CAAsB,OAAtB,EAAiCC,KAAD,IAAW;UACvC,MAAM;YAAEC;cAAYD,KAApB;UACA,MAAME,eAAe,GAAG,KAAKC,aAAL,CAAmB;YAAEF,OAAF;YAAWD;WAA9B,CAAxB;;UACA,IAAIE,eAAJ,EAAqB;YACjBF,KAAK,CAACI,WAAN,CAAkBF,eAAlB;;SAJR;;;IASR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACIG,gBAAgB,GAAG;;QAEfrH,IAAI,CAAC+G,gBAAL,CAAsB,SAAtB,EAAmCC,KAAD,IAAW;;;UAGzC,IAAIA,KAAK,CAACM,IAAN,IAAcN,KAAK,CAACM,IAAN,CAAW/C,IAAX,KAAoB,YAAtC,EAAoD;;YAEhD,MAAM;cAAEgD;gBAAYP,KAAK,CAACM,IAA1B;;YAC2C;cACvCnH,MAAM,CAACI,KAAP,CAAc,8BAAd,EAA6CgH,OAAO,CAACC,WAArD;;;YAEJ,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACC,WAAR,CAAoBI,GAApB,CAAyBjF,KAAD,IAAW;cACnE,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;gBAC3BA,KAAK,GAAG,CAACA,KAAD,CAAR;;;cAEJ,MAAMsE,OAAO,GAAG,IAAIY,OAAJ,CAAY,GAAGlF,KAAf,CAAhB;cACA,OAAO,KAAKwE,aAAL,CAAmB;gBAAEF,OAAF;gBAAWD;eAA9B,CAAP,CALmE;;;aAAnC,CAAZ,CAAxB,CANgD;;YAgBhDA,KAAK,CAACc,SAAN,CAAgBL,eAAhB,EAhBgD;;YAkBhD,IAAIT,KAAK,CAACe,KAAN,IAAef,KAAK,CAACe,KAAN,CAAY,CAAZ,CAAnB,EAAmC;cAC/B,KAAKN,eAAe,CAACO,IAAhB,CAAqB,MAAMhB,KAAK,CAACe,KAAN,CAAY,CAAZ,EAAeE,WAAf,CAA2B,IAA3B,CAA3B,CAAL;;;SAtBZ;;;IA4BR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACId,aAAa,CAAC;QAAEF,OAAF;QAAWD;OAAZ,EAAsB;QACY;UACvC5B,kBAAM,CAACX,UAAP,CAAkBwC,OAAlB,EAA2BY,OAA3B,EAAoC;YAChC1F,UAAU,EAAE,iBADoB;YAEhCC,SAAS,EAAE,QAFqB;YAGhCC,QAAQ,EAAE,eAHsB;YAIhCR,SAAS,EAAE;WAJf;;;QAOJ,MAAM0B,GAAG,GAAG,IAAI+C,GAAJ,CAAQW,OAAO,CAAC1D,GAAhB,EAAqByC,QAAQ,CAACD,IAA9B,CAAZ;;QACA,IAAI,CAACxC,GAAG,CAAC2E,QAAJ,CAAaC,UAAb,CAAwB,MAAxB,CAAL,EAAsC;UACS;YACvChI,MAAM,CAACI,KAAP,CAAc,2DAAd;;;UAEJ;;;QAEJ,MAAM6H,UAAU,GAAG7E,GAAG,CAACI,MAAJ,KAAeqC,QAAQ,CAACrC,MAA3C;QACA,MAAM;UAAE0E,MAAF;UAAUC;YAAU,KAAKC,iBAAL,CAAuB;UAC7CvB,KAD6C;UAE7CC,OAF6C;UAG7CmB,UAH6C;UAI7C7E;SAJsB,CAA1B;QAMA,IAAI4B,OAAO,GAAGmD,KAAK,IAAIA,KAAK,CAACnD,OAA7B;QACA,MAAMqD,aAAa,GAAG,EAAtB;;QAC2C;UACvC,IAAIrD,OAAJ,EAAa;YACTqD,aAAa,CAACC,IAAd,CAAmB,CAAE,uCAAF,EAA0CH,KAA1C,CAAnB;;YACA,IAAID,MAAJ,EAAY;cACRG,aAAa,CAACC,IAAd,CAAmB,CACd,sDADc,EAEfJ,MAFe,CAAnB;;;SA7BmB;;;;QAsC/B,MAAMvH,MAAM,GAAGmG,OAAO,CAACnG,MAAvB;;QACA,IAAI,CAACqE,OAAD,IAAY,KAAKyB,kBAAL,CAAwB8B,GAAxB,CAA4B5H,MAA5B,CAAhB,EAAqD;UACN;YACvC0H,aAAa,CAACC,IAAd,CAAoB,2CAAD,GACd,mCAAkC3H,MAAO,GAD9C;;;UAGJqE,OAAO,GAAG,KAAKyB,kBAAL,CAAwB+B,GAAxB,CAA4B7H,MAA5B,CAAV;;;QAEJ,IAAI,CAACqE,OAAL,EAAc;UACiC;;;YAGvChF,MAAM,CAACI,KAAP,CAAc,uBAAsB6F,cAAc,CAAC7C,GAAD,CAAM,EAAxD;;;UAEJ;;;QAEuC;;;UAGvCpD,MAAM,CAACQ,cAAP,CAAuB,4BAA2ByF,cAAc,CAAC7C,GAAD,CAAM,EAAtE;UACAiF,aAAa,CAACI,OAAd,CAAuBC,GAAD,IAAS;YAC3B,IAAIzE,KAAK,CAACD,OAAN,CAAc0E,GAAd,CAAJ,EAAwB;cACpB1I,MAAM,CAACK,GAAP,CAAW,GAAGqI,GAAd;aADJ,MAGK;cACD1I,MAAM,CAACK,GAAP,CAAWqI,GAAX;;WALR;UAQA1I,MAAM,CAACS,QAAP;SAlE2B;;;;QAsE/B,IAAIsG,eAAJ;;QACA,IAAI;UACAA,eAAe,GAAG/B,OAAO,CAACE,MAAR,CAAe;YAAE9B,GAAF;YAAO0D,OAAP;YAAgBD,KAAhB;YAAuBqB;WAAtC,CAAlB;SADJ,CAGA,OAAOS,GAAP,EAAY;UACR5B,eAAe,GAAGQ,OAAO,CAACqB,MAAR,CAAeD,GAAf,CAAlB;SA3E2B;;;QA8E/B,MAAMrD,YAAY,GAAG6C,KAAK,IAAIA,KAAK,CAAC7C,YAApC;;QACA,IAAIyB,eAAe,YAAYQ,OAA3B,KACC,KAAKsB,aAAL,IAAsBvD,YADvB,CAAJ,EAC0C;UACtCyB,eAAe,GAAGA,eAAe,CAAC+B,KAAhB,CAAsB,MAAOH,GAAP,IAAe;;YAEnD,IAAIrD,YAAJ,EAAkB;cAC6B;;;gBAGvCtF,MAAM,CAACQ,cAAP,CAAuB,mCAAD,GACjB,IAAGyF,cAAc,CAAC7C,GAAD,CAAM,0CAD5B;gBAEApD,MAAM,CAACO,KAAP,CAAc,kBAAd,EAAiC4H,KAAjC;gBACAnI,MAAM,CAACO,KAAP,CAAaoI,GAAb;gBACA3I,MAAM,CAACS,QAAP;;;cAEJ,IAAI;gBACA,OAAO,MAAM6E,YAAY,CAACJ,MAAb,CAAoB;kBAAE9B,GAAF;kBAAO0D,OAAP;kBAAgBD,KAAhB;kBAAuBqB;iBAA3C,CAAb;eADJ,CAGA,OAAOa,QAAP,EAAiB;gBACb,IAAIA,QAAQ,YAAYlH,KAAxB,EAA+B;kBAC3B8G,GAAG,GAAGI,QAAN;;;;;YAIZ,IAAI,KAAKF,aAAT,EAAwB;cACuB;;;gBAGvC7I,MAAM,CAACQ,cAAP,CAAuB,mCAAD,GACjB,IAAGyF,cAAc,CAAC7C,GAAD,CAAM,yCAD5B;gBAEApD,MAAM,CAACO,KAAP,CAAc,kBAAd,EAAiC4H,KAAjC;gBACAnI,MAAM,CAACO,KAAP,CAAaoI,GAAb;gBACA3I,MAAM,CAACS,QAAP;;;cAEJ,OAAO,KAAKoI,aAAL,CAAmB3D,MAAnB,CAA0B;gBAAE9B,GAAF;gBAAO0D,OAAP;gBAAgBD;eAA1C,CAAP;;;YAEJ,MAAM8B,GAAN;WAjCc,CAAlB;;;QAoCJ,OAAO5B,eAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACIqB,iBAAiB,CAAC;QAAEhF,GAAF;QAAO6E,UAAP;QAAmBnB,OAAnB;QAA4BD;OAA7B,EAAuC;QACpD,MAAMH,MAAM,GAAG,KAAKH,OAAL,CAAaiC,GAAb,CAAiB1B,OAAO,CAACnG,MAAzB,KAAoC,EAAnD;;QACA,KAAK,MAAMwH,KAAX,IAAoBzB,MAApB,EAA4B;UACxB,IAAIwB,MAAJ,CADwB;;;UAIxB,MAAMc,WAAW,GAAGb,KAAK,CAAC/C,KAAN,CAAY;YAAEhC,GAAF;YAAO6E,UAAP;YAAmBnB,OAAnB;YAA4BD;WAAxC,CAApB;;UACA,IAAImC,WAAJ,EAAiB;YAC8B;;;cAGvC,IAAIA,WAAW,YAAYzB,OAA3B,EAAoC;gBAChCvH,MAAM,CAACM,IAAP,CAAa,iBAAgB2F,cAAc,CAAC7C,GAAD,CAAM,aAArC,GACP,sDADO,GAEP,8DAFL,EAEoE+E,KAFpE;;aALK;;;;YAYbD,MAAM,GAAGc,WAAT;;YACA,IAAI/E,KAAK,CAACD,OAAN,CAAckE,MAAd,KAAyBA,MAAM,CAACe,MAAP,KAAkB,CAA/C,EAAkD;;cAE9Cf,MAAM,GAAGgB,SAAT;aAFJ,MAIK,IAAIF,WAAW,CAAClF,WAAZ,KAA4BxC,MAA5B;YACLA,MAAM,CAACC,IAAP,CAAYyH,WAAZ,EAAyBC,MAAzB,KAAoC,CADnC,EACsC;;cAEvCf,MAAM,GAAGgB,SAAT;aAHC,MAKA,IAAI,OAAOF,WAAP,KAAuB,SAA3B,EAAsC;;;;cAIvCd,MAAM,GAAGgB,SAAT;aA1BS;;;YA6Bb,OAAO;cAAEf,KAAF;cAASD;aAAhB;;SApC4C;;;QAwCpD,OAAO,EAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACIiB,iBAAiB,CAACnE,OAAD,EAAUrE,MAAM,GAAGkE,aAAnB,EAAkC;QAC/C,KAAK4B,kBAAL,CAAwB2C,GAAxB,CAA4BzI,MAA5B,EAAoCoE,gBAAgB,CAACC,OAAD,CAApD;;;IAGR;IACA;IACA;IACA;IACA;IACA;;;MACIK,eAAe,CAACL,OAAD,EAAU;QACrB,KAAK6D,aAAL,GAAqB9D,gBAAgB,CAACC,OAAD,CAArC;;;IAGR;IACA;IACA;IACA;;;MACIqE,aAAa,CAAClB,KAAD,EAAQ;QAC0B;UACvClD,kBAAM,CAACZ,MAAP,CAAc8D,KAAd,EAAqB,QAArB,EAA+B;YAC3BnG,UAAU,EAAE,iBADe;YAE3BC,SAAS,EAAE,QAFgB;YAG3BC,QAAQ,EAAE,eAHiB;YAI3BR,SAAS,EAAE;WAJf;UAMAuD,kBAAM,CAACf,SAAP,CAAiBiE,KAAjB,EAAwB,OAAxB,EAAiC;YAC7BnG,UAAU,EAAE,iBADiB;YAE7BC,SAAS,EAAE,QAFkB;YAG7BC,QAAQ,EAAE,eAHmB;YAI7BR,SAAS,EAAE;WAJf;UAMAuD,kBAAM,CAACZ,MAAP,CAAc8D,KAAK,CAACnD,OAApB,EAA6B,QAA7B,EAAuC;YACnChD,UAAU,EAAE,iBADuB;YAEnCC,SAAS,EAAE,QAFwB;YAGnCC,QAAQ,EAAE,eAHyB;YAInCR,SAAS,EAAE;WAJf;UAMAuD,kBAAM,CAACf,SAAP,CAAiBiE,KAAK,CAACnD,OAAvB,EAAgC,QAAhC,EAA0C;YACtChD,UAAU,EAAE,iBAD0B;YAEtCC,SAAS,EAAE,QAF2B;YAGtCC,QAAQ,EAAE,eAH4B;YAItCR,SAAS,EAAE;WAJf;UAMAuD,kBAAM,CAACZ,MAAP,CAAc8D,KAAK,CAACxH,MAApB,EAA4B,QAA5B,EAAsC;YAClCqB,UAAU,EAAE,iBADsB;YAElCC,SAAS,EAAE,QAFuB;YAGlCC,QAAQ,EAAE,eAHwB;YAIlCR,SAAS,EAAE;WAJf;;;QAOJ,IAAI,CAAC,KAAK6E,OAAL,CAAagC,GAAb,CAAiBJ,KAAK,CAACxH,MAAvB,CAAL,EAAqC;UACjC,KAAK4F,OAAL,CAAa6C,GAAb,CAAiBjB,KAAK,CAACxH,MAAvB,EAA+B,EAA/B;SAlCa;;;;QAsCjB,KAAK4F,OAAL,CAAaiC,GAAb,CAAiBL,KAAK,CAACxH,MAAvB,EAA+B2H,IAA/B,CAAoCH,KAApC;;;IAGR;IACA;IACA;IACA;;;MACImB,eAAe,CAACnB,KAAD,EAAQ;QACnB,IAAI,CAAC,KAAK5B,OAAL,CAAagC,GAAb,CAAiBJ,KAAK,CAACxH,MAAvB,CAAL,EAAqC;UACjC,MAAM,IAAIkD,YAAJ,CAAiB,4CAAjB,EAA+D;YACjElD,MAAM,EAAEwH,KAAK,CAACxH;WADZ,CAAN;;;QAIJ,MAAM4I,UAAU,GAAG,KAAKhD,OAAL,CAAaiC,GAAb,CAAiBL,KAAK,CAACxH,MAAvB,EAA+B6I,OAA/B,CAAuCrB,KAAvC,CAAnB;;QACA,IAAIoB,UAAU,GAAG,CAAC,CAAlB,EAAqB;UACjB,KAAKhD,OAAL,CAAaiC,GAAb,CAAiBL,KAAK,CAACxH,MAAvB,EAA+B8I,MAA/B,CAAsCF,UAAtC,EAAkD,CAAlD;SADJ,MAGK;UACD,MAAM,IAAI1F,YAAJ,CAAiB,uCAAjB,CAAN;;;;IArWC;;IC/Bb;IACA;AACA;IACA;IACA;IACA;IACA;IAGA,IAAI6F,aAAJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACO,MAAMC,wBAAwB,GAAG,MAAM;MAC1C,IAAI,CAACD,aAAL,EAAoB;QAChBA,aAAa,GAAG,IAAIpD,MAAJ,EAAhB,CADgB;;QAGhBoD,aAAa,CAAC/C,gBAAd;QACA+C,aAAa,CAACxC,gBAAd;;;MAEJ,OAAOwC,aAAP;IACH,CARM;;ICjBP;IACA;AACA;IACA;IACA;IACA;IACA;IAOA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,SAASL,aAAT,CAAuBO,OAAvB,EAAgC5E,OAAhC,EAAyCrE,MAAzC,EAAiD;MAC7C,IAAIwH,KAAJ;;MACA,IAAI,OAAOyB,OAAP,KAAmB,QAAvB,EAAiC;QAC7B,MAAMC,UAAU,GAAG,IAAI1D,GAAJ,CAAQyD,OAAR,EAAiB/D,QAAQ,CAACD,IAA1B,CAAnB;;QAC2C;UACvC,IAAI,EAAEgE,OAAO,CAAC5B,UAAR,CAAmB,GAAnB,KAA2B4B,OAAO,CAAC5B,UAAR,CAAmB,MAAnB,CAA7B,CAAJ,EAA8D;YAC1D,MAAM,IAAInE,YAAJ,CAAiB,gBAAjB,EAAmC;cACrC7B,UAAU,EAAE,iBADyB;cAErCE,QAAQ,EAAE,eAF2B;cAGrCR,SAAS,EAAE;aAHT,CAAN;WAFmC;;;;UAUvC,MAAMoI,YAAY,GAAGF,OAAO,CAAC5B,UAAR,CAAmB,MAAnB,IACf6B,UAAU,CAACE,QADI,GAEfH,OAFN,CAVuC;;UAcvC,MAAMI,SAAS,GAAG,QAAlB;;UACA,IAAI,IAAIvE,MAAJ,CAAY,GAAEuE,SAAU,EAAxB,EAA2BrE,IAA3B,CAAgCmE,YAAhC,CAAJ,EAAmD;YAC/C9J,MAAM,CAACI,KAAP,CAAc,8DAAD,GACR,cAAa4J,SAAU,2CADf,GAER,8DAFL;;;;QAKR,MAAMC,aAAa,GAAG,CAAC;UAAE7G;SAAH,KAAa;UACY;YACvC,IAAIA,GAAG,CAAC2G,QAAJ,KAAiBF,UAAU,CAACE,QAA5B,IACA3G,GAAG,CAACI,MAAJ,KAAeqG,UAAU,CAACrG,MAD9B,EACsC;cAClCxD,MAAM,CAACI,KAAP,CAAc,GAAEwJ,OAAQ,+CAAX,GACR,GAAExG,GAAG,CAAC2C,QAAJ,EAAe,sDADT,GAER,+BAFL;;;;UAKR,OAAO3C,GAAG,CAACwC,IAAJ,KAAaiE,UAAU,CAACjE,IAA/B;SATJ,CAvB6B;;;QAmC7BuC,KAAK,GAAG,IAAIhD,KAAJ,CAAU8E,aAAV,EAAyBjF,OAAzB,EAAkCrE,MAAlC,CAAR;OAnCJ,MAqCK,IAAIiJ,OAAO,YAAYnE,MAAvB,EAA+B;;QAEhC0C,KAAK,GAAG,IAAI5C,WAAJ,CAAgBqE,OAAhB,EAAyB5E,OAAzB,EAAkCrE,MAAlC,CAAR;OAFC,MAIA,IAAI,OAAOiJ,OAAP,KAAmB,UAAvB,EAAmC;;QAEpCzB,KAAK,GAAG,IAAIhD,KAAJ,CAAUyE,OAAV,EAAmB5E,OAAnB,EAA4BrE,MAA5B,CAAR;OAFC,MAIA,IAAIiJ,OAAO,YAAYzE,KAAvB,EAA8B;QAC/BgD,KAAK,GAAGyB,OAAR;OADC,MAGA;QACD,MAAM,IAAI/F,YAAJ,CAAiB,wBAAjB,EAA2C;UAC7C7B,UAAU,EAAE,iBADiC;UAE7CE,QAAQ,EAAE,eAFmC;UAG7CR,SAAS,EAAE;SAHT,CAAN;;;MAMJ,MAAMgI,aAAa,GAAGC,wBAAwB,EAA9C;MACAD,aAAa,CAACL,aAAd,CAA4BlB,KAA5B;MACA,OAAOA,KAAP;IACH;;IC1FD,IAAI;MACAtI,IAAI,CAAC,0BAAD,CAAJ,IAAoCC,CAAC,EAArC;IACH,CAFD,CAGA,OAAOC,CAAP,EAAU;;ICLV;IACA;AACA;IACA;IACA;IACA;IACA;IAEO,MAAMmK,sBAAsB,GAAG;;IAEtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIC,eAAe,EAAE,OAAO;QAAEC;OAAT,KAAwB;QACrC,IAAIA,QAAQ,CAAC9G,MAAT,KAAoB,GAApB,IAA2B8G,QAAQ,CAAC9G,MAAT,KAAoB,CAAnD,EAAsD;UAClD,OAAO8G,QAAP;;;QAEJ,OAAO,IAAP;;IAf8B,CAA/B;;ICRP;IACA;AACA;IACA;IACA;IACA;IACA;IAEA,MAAMC,iBAAiB,GAAG;MACtBC,eAAe,EAAE,iBADK;MAEtBC,QAAQ,EAAE,aAFY;MAGtBC,MAAM,EAAE,SAHc;MAItBC,OAAO,EAAE,SAJa;MAKtBC,MAAM,EAAE,OAAOC,YAAP,KAAwB,WAAxB,GAAsCA,YAAY,CAACC,KAAnD,GAA2D;IAL7C,CAA1B;;IAOA,MAAMC,gBAAgB,GAAItH,SAAD,IAAe;MACpC,OAAO,CAAC8G,iBAAiB,CAACG,MAAnB,EAA2BjH,SAA3B,EAAsC8G,iBAAiB,CAACK,MAAxD,EACFI,MADE,CACMlJ,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACqH,MAAN,GAAe,CADxC,EAEF9H,IAFE,CAEG,GAFH,CAAP;IAGH,CAJD;;IAKA,MAAM4J,mBAAmB,GAAIC,EAAD,IAAQ;MAChC,KAAK,MAAMxJ,GAAX,IAAkBF,MAAM,CAACC,IAAP,CAAY8I,iBAAZ,CAAlB,EAAkD;QAC9CW,EAAE,CAACxJ,GAAD,CAAF;;IAEP,CAJD;;IAKO,MAAMyJ,UAAU,GAAG;MACtBC,aAAa,EAAGvH,OAAD,IAAa;QACxBoH,mBAAmB,CAAEvJ,GAAD,IAAS;UACzB,IAAI,OAAOmC,OAAO,CAACnC,GAAD,CAAd,KAAwB,QAA5B,EAAsC;YAClC6I,iBAAiB,CAAC7I,GAAD,CAAjB,GAAyBmC,OAAO,CAACnC,GAAD,CAAhC;;SAFW,CAAnB;OAFkB;MAQtB2J,sBAAsB,EAAGC,aAAD,IAAmB;QACvC,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACC,eAAnB,CAAxC;OATkB;MAWtBe,eAAe,EAAGD,aAAD,IAAmB;QAChC,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACE,QAAnB,CAAxC;OAZkB;MActBe,SAAS,EAAE,MAAM;QACb,OAAOjB,iBAAiB,CAACG,MAAzB;OAfkB;MAiBtBe,cAAc,EAAGH,aAAD,IAAmB;QAC/B,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACI,OAAnB,CAAxC;OAlBkB;MAoBtBe,SAAS,EAAE,MAAM;QACb,OAAOnB,iBAAiB,CAACK,MAAzB;;IArBkB,CAAnB;;ICzBP;IACA;IACA;IACA;IACA;IACA;;IAEA,SAASe,WAAT,CAAqBC,OAArB,EAA8BC,YAA9B,EAA4C;MACxC,MAAMC,WAAW,GAAG,IAAIzF,GAAJ,CAAQuF,OAAR,CAApB;;MACA,KAAK,MAAMG,KAAX,IAAoBF,YAApB,EAAkC;QAC9BC,WAAW,CAACE,YAAZ,CAAyBC,MAAzB,CAAgCF,KAAhC;;;MAEJ,OAAOD,WAAW,CAAChG,IAAnB;IACH;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IACA,eAAeoG,sBAAf,CAAsCC,KAAtC,EAA6CnF,OAA7C,EAAsD6E,YAAtD,EAAoEO,YAApE,EAAkF;MAC9E,MAAMC,kBAAkB,GAAGV,WAAW,CAAC3E,OAAO,CAAC1D,GAAT,EAAcuI,YAAd,CAAtC,CAD8E;;MAG9E,IAAI7E,OAAO,CAAC1D,GAAR,KAAgB+I,kBAApB,EAAwC;QACpC,OAAOF,KAAK,CAAC7G,KAAN,CAAY0B,OAAZ,EAAqBoF,YAArB,CAAP;OAJ0E;;;MAO9E,MAAME,WAAW,GAAG9K,MAAM,CAAC+K,MAAP,CAAc/K,MAAM,CAAC+K,MAAP,CAAc,EAAd,EAAkBH,YAAlB,CAAd,EAA+C;QAAEI,YAAY,EAAE;OAA/D,CAApB;MACA,MAAMC,SAAS,GAAG,MAAMN,KAAK,CAAC1K,IAAN,CAAWuF,OAAX,EAAoBsF,WAApB,CAAxB;;MACA,KAAK,MAAMI,QAAX,IAAuBD,SAAvB,EAAkC;QAC9B,MAAME,mBAAmB,GAAGhB,WAAW,CAACe,QAAQ,CAACpJ,GAAV,EAAeuI,YAAf,CAAvC;;QACA,IAAIQ,kBAAkB,KAAKM,mBAA3B,EAAgD;UAC5C,OAAOR,KAAK,CAAC7G,KAAN,CAAYoH,QAAZ,EAAsBN,YAAtB,CAAP;;;;MAGR;IACH;;IC1CD;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAMQ,QAAN,CAAe;;IAEf;IACA;MACI5I,WAAW,GAAG;QACV,KAAK6I,OAAL,GAAe,IAAIpF,OAAJ,CAAY,CAACqF,OAAD,EAAUhE,MAAV,KAAqB;UAC5C,KAAKgE,OAAL,GAAeA,OAAf;UACA,KAAKhE,MAAL,GAAcA,MAAd;SAFW,CAAf;;;IALO;;IChBf;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;;IACA,MAAMiE,mBAAmB,GAAG,IAAIC,GAAJ,EAA5B;;ICXA;IACA;AACA;IACA;IACA;IACA;IACA;IAIA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,eAAeC,0BAAf,GAA4C;MACG;QACvC/M,MAAM,CAACK,GAAP,CAAY,gBAAewM,mBAAmB,CAAC5J,IAAK,GAAzC,GACN,+BADL;;;MAGJ,KAAK,MAAM+J,QAAX,IAAuBH,mBAAvB,EAA4C;QACxC,MAAMG,QAAQ,EAAd;;QAC2C;UACvChN,MAAM,CAACK,GAAP,CAAW2M,QAAX,EAAqB,cAArB;;;;MAGmC;QACvChN,MAAM,CAACK,GAAP,CAAW,6BAAX;;IAEP;;IC/BD;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACO,SAAS4M,OAAT,CAAiBC,EAAjB,EAAqB;MACxB,OAAO,IAAI3F,OAAJ,CAAaqF,OAAD,IAAaO,UAAU,CAACP,OAAD,EAAUM,EAAV,CAAnC,CAAP;IACH;;ICjBD;IACA;AACA;IACA;IACA;IACA;IACA;;IAUA,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;MACtB,OAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4B,IAAI3F,OAAJ,CAAY2F,KAAZ,CAA5B,GAAiDA,KAAxD;IACH;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IACA,MAAMC,eAAN,CAAsB;;IAEtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIxJ,WAAW,CAACyJ,QAAD,EAAWC,OAAX,EAAoB;QAC3B,KAAKC,UAAL,GAAkB,EAAlB;;IAER;IACA;IACA;IACA;IACA;IACA;IACA;;;IAEA;IACA;IACA;IACA;IACA;IACA;;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;QACmD;UACvCxI,kBAAM,CAACX,UAAP,CAAkBkJ,OAAO,CAAC3G,KAA1B,EAAiC6G,eAAjC,EAAkD;YAC9C1L,UAAU,EAAE,oBADkC;YAE9CC,SAAS,EAAE,iBAFmC;YAG9CC,QAAQ,EAAE,aAHoC;YAI9CR,SAAS,EAAE;WAJf;;;QAOJJ,MAAM,CAAC+K,MAAP,CAAc,IAAd,EAAoBmB,OAApB;QACA,KAAK3G,KAAL,GAAa2G,OAAO,CAAC3G,KAArB;QACA,KAAK8G,SAAL,GAAiBJ,QAAjB;QACA,KAAKK,gBAAL,GAAwB,IAAIlB,QAAJ,EAAxB;QACA,KAAKmB,uBAAL,GAA+B,EAA/B,CAnD2B;;;QAsD3B,KAAKC,QAAL,GAAgB,CAAC,GAAGP,QAAQ,CAACQ,OAAb,CAAhB;QACA,KAAKC,eAAL,GAAuB,IAAIxH,GAAJ,EAAvB;;QACA,KAAK,MAAMyH,MAAX,IAAqB,KAAKH,QAA1B,EAAoC;UAChC,KAAKE,eAAL,CAAqB5E,GAArB,CAAyB6E,MAAzB,EAAiC,EAAjC;;;QAEJ,KAAKpH,KAAL,CAAWc,SAAX,CAAqB,KAAKiG,gBAAL,CAAsBjB,OAA3C;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACe,MAALuB,KAAK,CAACb,KAAD,EAAQ;QACf,MAAM;UAAExG;YAAU,IAAlB;QACA,IAAIC,OAAO,GAAGsG,SAAS,CAACC,KAAD,CAAvB;;QACA,IAAIvG,OAAO,CAACqH,IAAR,KAAiB,UAAjB,IACAtH,KAAK,YAAYuH,UADjB,IAEAvH,KAAK,CAACwH,eAFV,EAE2B;UACvB,MAAMC,uBAAuB,GAAI,MAAMzH,KAAK,CAACwH,eAA7C;;UACA,IAAIC,uBAAJ,EAA6B;YACkB;cACvCtO,MAAM,CAACK,GAAP,CAAY,4CAAD,GACN,IAAG4F,cAAc,CAACa,OAAO,CAAC1D,GAAT,CAAc,GADpC;;;YAGJ,OAAOkL,uBAAP;;SAZO;;;;;QAkBf,MAAMC,eAAe,GAAG,KAAKC,WAAL,CAAiB,cAAjB,IAClB1H,OAAO,CAAC2H,KAAR,EADkB,GAElB,IAFN;;QAGA,IAAI;UACA,KAAK,MAAMC,EAAX,IAAiB,KAAKC,gBAAL,CAAsB,kBAAtB,CAAjB,EAA4D;YACxD7H,OAAO,GAAG,MAAM4H,EAAE,CAAC;cAAE5H,OAAO,EAAEA,OAAO,CAAC2H,KAAR,EAAX;cAA4B5H;aAA7B,CAAlB;;SAFR,CAKA,OAAO8B,GAAP,EAAY;UACR,IAAIA,GAAG,YAAY9G,KAAnB,EAA0B;YACtB,MAAM,IAAIgC,YAAJ,CAAiB,iCAAjB,EAAoD;cACtDlB,kBAAkB,EAAEgG,GAAG,CAACtF;aADtB,CAAN;;SA5BO;;;;;QAoCf,MAAMuL,qBAAqB,GAAG9H,OAAO,CAAC2H,KAAR,EAA9B;;QACA,IAAI;UACA,IAAII,aAAJ,CADA;;UAGAA,aAAa,GAAG,MAAMX,KAAK,CAACpH,OAAD,EAAUA,OAAO,CAACqH,IAAR,KAAiB,UAAjB,GAA8BjF,SAA9B,GAA0C,KAAKyE,SAAL,CAAemB,YAAnE,CAA3B;;UACA,IAAI,kBAAyB,YAA7B,EAA2C;YACvC9O,MAAM,CAACI,KAAP,CAAc,sBAAD,GACR,IAAG6F,cAAc,CAACa,OAAO,CAAC1D,GAAT,CAAc,6BADvB,GAER,WAAUyL,aAAa,CAACvL,MAAO,IAFpC;;;UAIJ,KAAK,MAAM0J,QAAX,IAAuB,KAAK2B,gBAAL,CAAsB,iBAAtB,CAAvB,EAAiE;YAC7DE,aAAa,GAAG,MAAM7B,QAAQ,CAAC;cAC3BnG,KAD2B;cAE3BC,OAAO,EAAE8H,qBAFkB;cAG3BxE,QAAQ,EAAEyE;aAHgB,CAA9B;;;UAMJ,OAAOA,aAAP;SAhBJ,CAkBA,OAAOtO,KAAP,EAAc;UACiC;YACvCP,MAAM,CAACK,GAAP,CAAY,sBAAD,GACN,IAAG4F,cAAc,CAACa,OAAO,CAAC1D,GAAT,CAAc,mBADpC,EACwD7C,KADxD;WAFM;;;;UAOV,IAAIgO,eAAJ,EAAqB;YACjB,MAAM,KAAKQ,YAAL,CAAkB,cAAlB,EAAkC;cACpCxO,KAAK,EAAEA,KAD6B;cAEpCsG,KAFoC;cAGpC0H,eAAe,EAAEA,eAAe,CAACE,KAAhB,EAHmB;cAIpC3H,OAAO,EAAE8H,qBAAqB,CAACH,KAAtB;aAJP,CAAN;;;UAOJ,MAAMlO,KAAN;;;;IAIZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MAC0B,MAAhByO,gBAAgB,CAAC3B,KAAD,EAAQ;QAC1B,MAAMjD,QAAQ,GAAG,MAAM,KAAK8D,KAAL,CAAWb,KAAX,CAAvB;QACA,MAAM4B,aAAa,GAAG7E,QAAQ,CAACqE,KAAT,EAAtB;QACA,KAAK,KAAK9G,SAAL,CAAe,KAAKuH,QAAL,CAAc7B,KAAd,EAAqB4B,aAArB,CAAf,CAAL;QACA,OAAO7E,QAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACoB,MAAV+E,UAAU,CAAC3N,GAAD,EAAM;QAClB,MAAMsF,OAAO,GAAGsG,SAAS,CAAC5L,GAAD,CAAzB;QACA,IAAI4N,cAAJ;QACA,MAAM;UAAE7L,SAAF;UAAa2I;YAAiB,KAAKyB,SAAzC;QACA,MAAM0B,gBAAgB,GAAG,MAAM,KAAKC,WAAL,CAAiBxI,OAAjB,EAA0B,MAA1B,CAA/B;QACA,MAAMyI,iBAAiB,GAAGjO,MAAM,CAAC+K,MAAP,CAAc/K,MAAM,CAAC+K,MAAP,CAAc,EAAd,EAAkBH,YAAlB,CAAd,EAA+C;UAAE3I;SAAjD,CAA1B;QACA6L,cAAc,GAAG,MAAMI,MAAM,CAACpK,KAAP,CAAaiK,gBAAb,EAA+BE,iBAA/B,CAAvB;;QAC2C;UACvC,IAAIH,cAAJ,EAAoB;YAChBpP,MAAM,CAACI,KAAP,CAAc,+BAA8BmD,SAAU,IAAtD;WADJ,MAGK;YACDvD,MAAM,CAACI,KAAP,CAAc,gCAA+BmD,SAAU,IAAvD;;;;QAGR,KAAK,MAAMyJ,QAAX,IAAuB,KAAK2B,gBAAL,CAAsB,0BAAtB,CAAvB,EAA0E;UACtES,cAAc,GACV,CAAC,MAAMpC,QAAQ,CAAC;YACZzJ,SADY;YAEZ2I,YAFY;YAGZkD,cAHY;YAIZtI,OAAO,EAAEuI,gBAJG;YAKZxI,KAAK,EAAE,KAAKA;WALD,CAAf,KAMOqC,SAPX;;;QASJ,OAAOkG,cAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACkB,MAARF,QAAQ,CAAC1N,GAAD,EAAM4I,QAAN,EAAgB;QAC1B,MAAMtD,OAAO,GAAGsG,SAAS,CAAC5L,GAAD,CAAzB,CAD0B;;;QAI1B,MAAMyL,OAAO,CAAC,CAAD,CAAb;QACA,MAAMoC,gBAAgB,GAAG,MAAM,KAAKC,WAAL,CAAiBxI,OAAjB,EAA0B,OAA1B,CAA/B;;QAC2C;UACvC,IAAIuI,gBAAgB,CAAC1O,MAAjB,IAA2B0O,gBAAgB,CAAC1O,MAAjB,KAA4B,KAA3D,EAAkE;YAC9D,MAAM,IAAIkD,YAAJ,CAAiB,kCAAjB,EAAqD;cACvDT,GAAG,EAAE6C,cAAc,CAACoJ,gBAAgB,CAACjM,GAAlB,CADoC;cAEvDzC,MAAM,EAAE0O,gBAAgB,CAAC1O;aAFvB,CAAN;WAFmC;;;UAQvC,MAAM8O,IAAI,GAAGrF,QAAQ,CAACsF,OAAT,CAAiBlH,GAAjB,CAAqB,MAArB,CAAb;;UACA,IAAIiH,IAAJ,EAAU;YACNzP,MAAM,CAACI,KAAP,CAAc,oBAAmB6F,cAAc,CAACoJ,gBAAgB,CAACjM,GAAlB,CAAuB,GAAzD,GACR,gBAAeqM,IAAK,YADZ,GAER,kEAFQ,GAGR,0DAHL;;;;QAMR,IAAI,CAACrF,QAAL,EAAe;UACgC;YACvCpK,MAAM,CAACO,KAAP,CAAc,yCAAD,GACR,IAAG0F,cAAc,CAACoJ,gBAAgB,CAACjM,GAAlB,CAAuB,IAD7C;;;UAGJ,MAAM,IAAIS,YAAJ,CAAiB,4BAAjB,EAA+C;YACjDT,GAAG,EAAE6C,cAAc,CAACoJ,gBAAgB,CAACjM,GAAlB;WADjB,CAAN;;;QAIJ,MAAMuM,eAAe,GAAG,MAAM,KAAKC,0BAAL,CAAgCxF,QAAhC,CAA9B;;QACA,IAAI,CAACuF,eAAL,EAAsB;UACyB;YACvC3P,MAAM,CAACI,KAAP,CAAc,aAAY6F,cAAc,CAACoJ,gBAAgB,CAACjM,GAAlB,CAAuB,IAAlD,GACR,qBADL,EAC2BuM,eAD3B;;;UAGJ,OAAO,KAAP;;;QAEJ,MAAM;UAAEpM,SAAF;UAAa2I;YAAiB,KAAKyB,SAAzC;QACA,MAAM1B,KAAK,GAAG,MAAMpM,IAAI,CAAC2P,MAAL,CAAYK,IAAZ,CAAiBtM,SAAjB,CAApB;QACA,MAAMuM,sBAAsB,GAAG,KAAKtB,WAAL,CAAiB,gBAAjB,CAA/B;QACA,MAAMuB,WAAW,GAAGD,sBAAsB,GACpC,MAAM9D,sBAAsB;;;QAI9BC,KAJ8B,EAIvBoD,gBAAgB,CAACZ,KAAjB,EAJuB,EAIG,CAAC,iBAAD,CAJH,EAIwBvC,YAJxB,CADQ,GAMpC,IANN;;QAO2C;UACvClM,MAAM,CAACI,KAAP,CAAc,iBAAgBmD,SAAU,8BAA3B,GACR,OAAM0C,cAAc,CAACoJ,gBAAgB,CAACjM,GAAlB,CAAuB,GADhD;;;QAGJ,IAAI;UACA,MAAM6I,KAAK,CAAC+D,GAAN,CAAUX,gBAAV,EAA4BS,sBAAsB,GAAGH,eAAe,CAAClB,KAAhB,EAAH,GAA6BkB,eAA/E,CAAN;SADJ,CAGA,OAAOpP,KAAP,EAAc;UACV,IAAIA,KAAK,YAAYsB,KAArB,EAA4B;;YAExB,IAAItB,KAAK,CAACsC,IAAN,KAAe,oBAAnB,EAAyC;cACrC,MAAMkK,0BAA0B,EAAhC;;;YAEJ,MAAMxM,KAAN;;;;QAGR,KAAK,MAAMyM,QAAX,IAAuB,KAAK2B,gBAAL,CAAsB,gBAAtB,CAAvB,EAAgE;UAC5D,MAAM3B,QAAQ,CAAC;YACXzJ,SADW;YAEXwM,WAFW;YAGXE,WAAW,EAAEN,eAAe,CAAClB,KAAhB,EAHF;YAIX3H,OAAO,EAAEuI,gBAJE;YAKXxI,KAAK,EAAE,KAAKA;WALF,CAAd;;;QAQJ,OAAO,IAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACqB,MAAXyI,WAAW,CAACxI,OAAD,EAAUqH,IAAV,EAAgB;QAC7B,MAAM3M,GAAG,GAAI,GAAEsF,OAAO,CAAC1D,GAAI,MAAK+K,IAAK,EAArC;;QACA,IAAI,CAAC,KAAKV,UAAL,CAAgBjM,GAAhB,CAAL,EAA2B;UACvB,IAAI6N,gBAAgB,GAAGvI,OAAvB;;UACA,KAAK,MAAMkG,QAAX,IAAuB,KAAK2B,gBAAL,CAAsB,oBAAtB,CAAvB,EAAoE;YAChEU,gBAAgB,GAAGjC,SAAS,CAAC,MAAMJ,QAAQ,CAAC;cACxCmB,IADwC;cAExCrH,OAAO,EAAEuI,gBAF+B;cAGxCxI,KAAK,EAAE,KAAKA,KAH4B;;cAKxCqB,MAAM,EAAE,KAAKA,MAL2B;;aAAD,CAAf,CAA5B;;;UAQJ,KAAKuF,UAAL,CAAgBjM,GAAhB,IAAuB6N,gBAAvB;;;QAEJ,OAAO,KAAK5B,UAAL,CAAgBjM,GAAhB,CAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;;;MACIgN,WAAW,CAAC3L,IAAD,EAAO;QACd,KAAK,MAAMoL,MAAX,IAAqB,KAAKN,SAAL,CAAeI,OAApC,EAA6C;UACzC,IAAIlL,IAAI,IAAIoL,MAAZ,EAAoB;YAChB,OAAO,IAAP;;;;QAGR,OAAO,KAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACsB,MAAZc,YAAY,CAAClM,IAAD,EAAOgJ,KAAP,EAAc;QAC5B,KAAK,MAAMmB,QAAX,IAAuB,KAAK2B,gBAAL,CAAsB9L,IAAtB,CAAvB,EAAoD;;;UAGhD,MAAMmK,QAAQ,CAACnB,KAAD,CAAd;;;;IAIZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACqB,CAAhB8C,gBAAgB,CAAC9L,IAAD,EAAO;QACpB,KAAK,MAAMoL,MAAX,IAAqB,KAAKN,SAAL,CAAeI,OAApC,EAA6C;UACzC,IAAI,OAAOE,MAAM,CAACpL,IAAD,CAAb,KAAwB,UAA5B,EAAwC;YACpC,MAAMqN,KAAK,GAAG,KAAKlC,eAAL,CAAqBxF,GAArB,CAAyByF,MAAzB,CAAd;;YACA,MAAMkC,gBAAgB,GAAItE,KAAD,IAAW;cAChC,MAAMuE,aAAa,GAAG9O,MAAM,CAAC+K,MAAP,CAAc/K,MAAM,CAAC+K,MAAP,CAAc,EAAd,EAAkBR,KAAlB,CAAd,EAAwC;gBAAEqE;eAA1C,CAAtB,CADgC;;;cAIhC,OAAOjC,MAAM,CAACpL,IAAD,CAAN,CAAauN,aAAb,CAAP;aAJJ;;YAMA,MAAMD,gBAAN;;;;;IAKhB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACIxI,SAAS,CAACgF,OAAD,EAAU;QACf,KAAKkB,uBAAL,CAA6BvF,IAA7B,CAAkCqE,OAAlC;;QACA,OAAOA,OAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACqB,MAAX0D,WAAW,GAAG;QAChB,IAAI1D,OAAJ;;QACA,OAAQA,OAAO,GAAG,KAAKkB,uBAAL,CAA6ByC,KAA7B,EAAlB,EAAyD;UACrD,MAAM3D,OAAN;;;;IAIZ;IACA;IACA;;;MACI4D,OAAO,GAAG;QACN,KAAK3C,gBAAL,CAAsBhB,OAAtB,CAA8B,IAA9B;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACoC,MAA1BgD,0BAA0B,CAACxF,QAAD,EAAW;QACvC,IAAIuF,eAAe,GAAGvF,QAAtB;QACA,IAAIoG,WAAW,GAAG,KAAlB;;QACA,KAAK,MAAMxD,QAAX,IAAuB,KAAK2B,gBAAL,CAAsB,iBAAtB,CAAvB,EAAiE;UAC7DgB,eAAe,GACX,CAAC,MAAM3C,QAAQ,CAAC;YACZlG,OAAO,EAAE,KAAKA,OADF;YAEZsD,QAAQ,EAAEuF,eAFE;YAGZ9I,KAAK,EAAE,KAAKA;WAHD,CAAf,KAIOqC,SALX;UAMAsH,WAAW,GAAG,IAAd;;UACA,IAAI,CAACb,eAAL,EAAsB;YAClB;;;;QAGR,IAAI,CAACa,WAAL,EAAkB;UACd,IAAIb,eAAe,IAAIA,eAAe,CAACrM,MAAhB,KAA2B,GAAlD,EAAuD;YACnDqM,eAAe,GAAGzG,SAAlB;;;UAEuC;YACvC,IAAIyG,eAAJ,EAAqB;cACjB,IAAIA,eAAe,CAACrM,MAAhB,KAA2B,GAA/B,EAAoC;gBAChC,IAAIqM,eAAe,CAACrM,MAAhB,KAA2B,CAA/B,EAAkC;kBAC9BtD,MAAM,CAACM,IAAP,CAAa,qBAAoB,KAAKwG,OAAL,CAAa1D,GAAI,IAAtC,GACP,0DADO,GAEP,mDAFL;iBADJ,MAKK;kBACDpD,MAAM,CAACI,KAAP,CAAc,qBAAoB,KAAK0G,OAAL,CAAa1D,GAAI,IAAtC,GACR,8BAA6BgH,QAAQ,CAAC9G,MAAO,cADrC,GAER,wBAFL;;;;;;;QAQpB,OAAOqM,eAAP;;;IAtec;;IC5BtB;IACA;AACA;IACA;IACA;IACA;IACA;IAOA;IACA;IACA;IACA;IACA;;IACA,MAAMc,QAAN,CAAe;;IAEf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI3M,WAAW,CAAC0J,OAAO,GAAG,EAAX,EAAe;;IAE9B;IACA;IACA;IACA;IACA;IACA;QACQ,KAAKjK,SAAL,GAAiB0H,UAAU,CAACM,cAAX,CAA0BiC,OAAO,CAACjK,SAAlC,CAAjB;;IAER;IACA;IACA;IACA;IACA;IACA;;QACQ,KAAKwK,OAAL,GAAeP,OAAO,CAACO,OAAR,IAAmB,EAAlC;;IAER;IACA;IACA;IACA;IACA;IACA;;QACQ,KAAKe,YAAL,GAAoBtB,OAAO,CAACsB,YAA5B;;IAER;IACA;IACA;IACA;IACA;IACA;;QACQ,KAAK5C,YAAL,GAAoBsB,OAAO,CAACtB,YAA5B;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACIhH,MAAM,CAACsI,OAAD,EAAU;QACZ,MAAM,CAACkD,YAAD,IAAiB,KAAKC,SAAL,CAAenD,OAAf,CAAvB;QACA,OAAOkD,YAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACIC,SAAS,CAACnD,OAAD,EAAU;;QAEf,IAAIA,OAAO,YAAYY,UAAvB,EAAmC;UAC/BZ,OAAO,GAAG;YACN3G,KAAK,EAAE2G,OADD;YAEN1G,OAAO,EAAE0G,OAAO,CAAC1G;WAFrB;;;QAKJ,MAAMD,KAAK,GAAG2G,OAAO,CAAC3G,KAAtB;QACA,MAAMC,OAAO,GAAG,OAAO0G,OAAO,CAAC1G,OAAf,KAA2B,QAA3B,GACV,IAAIY,OAAJ,CAAY8F,OAAO,CAAC1G,OAApB,CADU,GAEV0G,OAAO,CAAC1G,OAFd;QAGA,MAAMoB,MAAM,GAAG,YAAYsF,OAAZ,GAAsBA,OAAO,CAACtF,MAA9B,GAAuCgB,SAAtD;QACA,MAAMlE,OAAO,GAAG,IAAIsI,eAAJ,CAAoB,IAApB,EAA0B;UAAEzG,KAAF;UAASC,OAAT;UAAkBoB;SAA5C,CAAhB;;QACA,MAAMwI,YAAY,GAAG,KAAKE,YAAL,CAAkB5L,OAAlB,EAA2B8B,OAA3B,EAAoCD,KAApC,CAArB;;QACA,MAAMgK,WAAW,GAAG,KAAKC,cAAL,CAAoBJ,YAApB,EAAkC1L,OAAlC,EAA2C8B,OAA3C,EAAoDD,KAApD,CAApB,CAfe;;;QAiBf,OAAO,CAAC6J,YAAD,EAAeG,WAAf,CAAP;;;MAEc,MAAZD,YAAY,CAAC5L,OAAD,EAAU8B,OAAV,EAAmBD,KAAnB,EAA0B;QACxC,MAAM7B,OAAO,CAAC+J,YAAR,CAAqB,kBAArB,EAAyC;UAAElI,KAAF;UAASC;SAAlD,CAAN;QACA,IAAIsD,QAAQ,GAAGlB,SAAf;;QACA,IAAI;UACAkB,QAAQ,GAAG,MAAM,KAAK2G,OAAL,CAAajK,OAAb,EAAsB9B,OAAtB,CAAjB,CADA;;;;UAKA,IAAI,CAACoF,QAAD,IAAaA,QAAQ,CAAChG,IAAT,KAAkB,OAAnC,EAA4C;YACxC,MAAM,IAAIP,YAAJ,CAAiB,aAAjB,EAAgC;cAAET,GAAG,EAAE0D,OAAO,CAAC1D;aAA/C,CAAN;;SANR,CASA,OAAO7C,KAAP,EAAc;UACV,IAAIA,KAAK,YAAYsB,KAArB,EAA4B;YACxB,KAAK,MAAMmL,QAAX,IAAuBhI,OAAO,CAAC2J,gBAAR,CAAyB,iBAAzB,CAAvB,EAAoE;cAChEvE,QAAQ,GAAG,MAAM4C,QAAQ,CAAC;gBAAEzM,KAAF;gBAASsG,KAAT;gBAAgBC;eAAjB,CAAzB;;cACA,IAAIsD,QAAJ,EAAc;gBACV;;;;;UAIZ,IAAI,CAACA,QAAL,EAAe;YACX,MAAM7J,KAAN;WADJ,MAGgD;YAC5CP,MAAM,CAACK,GAAP,CAAY,wBAAuB4F,cAAc,CAACa,OAAO,CAAC1D,GAAT,CAAc,KAApD,GACN,MAAK7C,KAAK,YAAYsB,KAAjB,GAAyBtB,KAAK,CAACwF,QAAN,EAAzB,GAA4C,EAAG,yDAD9C,GAEN,2BAFL;;;;QAKR,KAAK,MAAMiH,QAAX,IAAuBhI,OAAO,CAAC2J,gBAAR,CAAyB,oBAAzB,CAAvB,EAAuE;UACnEvE,QAAQ,GAAG,MAAM4C,QAAQ,CAAC;YAAEnG,KAAF;YAASC,OAAT;YAAkBsD;WAAnB,CAAzB;;;QAEJ,OAAOA,QAAP;;;MAEgB,MAAd0G,cAAc,CAACJ,YAAD,EAAe1L,OAAf,EAAwB8B,OAAxB,EAAiCD,KAAjC,EAAwC;QACxD,IAAIuD,QAAJ;QACA,IAAI7J,KAAJ;;QACA,IAAI;UACA6J,QAAQ,GAAG,MAAMsG,YAAjB;SADJ,CAGA,OAAOnQ,KAAP,EAAc;;;;;QAKd,IAAI;UACA,MAAMyE,OAAO,CAAC+J,YAAR,CAAqB,mBAArB,EAA0C;YAC5ClI,KAD4C;YAE5CC,OAF4C;YAG5CsD;WAHE,CAAN;UAKA,MAAMpF,OAAO,CAACqL,WAAR,EAAN;SANJ,CAQA,OAAOW,cAAP,EAAuB;UACnB,IAAIA,cAAc,YAAYnP,KAA9B,EAAqC;YACjCtB,KAAK,GAAGyQ,cAAR;;;;QAGR,MAAMhM,OAAO,CAAC+J,YAAR,CAAqB,oBAArB,EAA2C;UAC7ClI,KAD6C;UAE7CC,OAF6C;UAG7CsD,QAH6C;UAI7C7J,KAAK,EAAEA;SAJL,CAAN;QAMAyE,OAAO,CAACuL,OAAR;;QACA,IAAIhQ,KAAJ,EAAW;UACP,MAAMA,KAAN;;;;IA5LG;IAiMf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;ICnOA;IACA;AACA;IACA;IACA;IACA;IACA;IAIO,MAAMkB,QAAQ,GAAG;MACpBwP,aAAa,EAAE,CAACC,YAAD,EAAepK,OAAf,KAA4B,SAAQoK,YAAa,mBAAkBjL,cAAc,CAACa,OAAO,CAAC1D,GAAT,CAAc,GAD1F;MAEpB+N,kBAAkB,EAAG/G,QAAD,IAAc;QAC9B,IAAIA,QAAJ,EAAc;UACVpK,MAAM,CAACQ,cAAP,CAAuB,+BAAvB;UACAR,MAAM,CAACK,GAAP,CAAW+J,QAAQ,IAAI,wBAAvB;UACApK,MAAM,CAACS,QAAP;;;IANY,CAAjB;;ICVP;IACA;AACA;IACA;IACA;IACA;IACA;IAQA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAM2Q,YAAN,SAA2BX,QAA3B,CAAoC;;IAEpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI3M,WAAW,CAAC0J,OAAO,GAAG,EAAX,EAAe;QACtB,MAAMA,OAAN,EADsB;;;QAItB,IAAI,CAAC,KAAKO,OAAL,CAAasD,IAAb,CAAmBC,CAAD,IAAO,qBAAqBA,CAA9C,CAAL,EAAuD;UACnD,KAAKvD,OAAL,CAAawD,OAAb,CAAqBrH,sBAArB;;;QAEJ,KAAKsH,sBAAL,GAA8BhE,OAAO,CAACiE,qBAAR,IAAiC,CAA/D;;QAC2C;UACvC,IAAI,KAAKD,sBAAT,EAAiC;YAC7BvM,kBAAM,CAACZ,MAAP,CAAc,KAAKmN,sBAAnB,EAA2C,QAA3C,EAAqD;cACjDxP,UAAU,EAAE,oBADqC;cAEjDC,SAAS,EAAE,KAAK6B,WAAL,CAAiBjB,IAFqB;cAGjDX,QAAQ,EAAE,aAHuC;cAIjDR,SAAS,EAAE;aAJf;;;;;IAUhB;IACA;IACA;IACA;IACA;IACA;;;MACiB,MAAPqP,OAAO,CAACjK,OAAD,EAAU9B,OAAV,EAAmB;QAC5B,MAAM0M,IAAI,GAAG,EAAb;;QAC2C;UACvCzM,kBAAM,CAACX,UAAP,CAAkBwC,OAAlB,EAA2BY,OAA3B,EAAoC;YAChC1F,UAAU,EAAE,oBADoB;YAEhCC,SAAS,EAAE,KAAK6B,WAAL,CAAiBjB,IAFI;YAGhCX,QAAQ,EAAE,QAHsB;YAIhCR,SAAS,EAAE;WAJf;;;QAOJ,MAAMiQ,QAAQ,GAAG,EAAjB;QACA,IAAIC,SAAJ;;QACA,IAAI,KAAKJ,sBAAT,EAAiC;UAC7B,MAAM;YAAEK,EAAF;YAAMlF;cAAY,KAAKmF,kBAAL,CAAwB;YAAEhL,OAAF;YAAW4K,IAAX;YAAiB1M;WAAzC,CAAxB;;UACA4M,SAAS,GAAGC,EAAZ;UACAF,QAAQ,CAACrJ,IAAT,CAAcqE,OAAd;;;QAEJ,MAAMoF,cAAc,GAAG,KAAKC,kBAAL,CAAwB;UAC3CJ,SAD2C;UAE3C9K,OAF2C;UAG3C4K,IAH2C;UAI3C1M;SAJmB,CAAvB;;QAMA2M,QAAQ,CAACrJ,IAAT,CAAcyJ,cAAd;QACA,MAAM3H,QAAQ,GAAG,MAAMpF,OAAO,CAAC2C,SAAR,CAAkB,CAAC,YAAY;;UAElD,OAAQ,CAAC,MAAM3C,OAAO,CAAC2C,SAAR,CAAkBJ,OAAO,CAAC0K,IAAR,CAAaN,QAAb,CAAlB,CAAP;;;;;UAMH,MAAMI,cANH,CAAR;SAFqC,GAAlB,CAAvB;;QAU2C;UACvC/R,MAAM,CAACQ,cAAP,CAAsBiB,QAAQ,CAACwP,aAAT,CAAuB,KAAKnN,WAAL,CAAiBjB,IAAxC,EAA8CiE,OAA9C,CAAtB;;UACA,KAAK,MAAMzG,GAAX,IAAkBqR,IAAlB,EAAwB;YACpB1R,MAAM,CAACK,GAAP,CAAWA,GAAX;;;UAEJoB,QAAQ,CAAC0P,kBAAT,CAA4B/G,QAA5B;UACApK,MAAM,CAACS,QAAP;;;QAEJ,IAAI,CAAC2J,QAAL,EAAe;UACX,MAAM,IAAIvG,YAAJ,CAAiB,aAAjB,EAAgC;YAAET,GAAG,EAAE0D,OAAO,CAAC1D;WAA/C,CAAN;;;QAEJ,OAAOgH,QAAP;;;IAGR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MACI0H,kBAAkB,CAAC;QAAEhL,OAAF;QAAW4K,IAAX;QAAiB1M;OAAlB,EAA8B;QAC5C,IAAI4M,SAAJ;QACA,MAAMM,cAAc,GAAG,IAAI3K,OAAJ,CAAaqF,OAAD,IAAa;UAC5C,MAAMuF,gBAAgB,GAAG,YAAY;YACU;cACvCT,IAAI,CAACpJ,IAAL,CAAW,qCAAD,GACL,GAAE,KAAKkJ,sBAAuB,WADnC;;;YAGJ5E,OAAO,CAAC,MAAM5H,OAAO,CAACmK,UAAR,CAAmBrI,OAAnB,CAAP,CAAP;WALJ;;UAOA8K,SAAS,GAAGzE,UAAU,CAACgF,gBAAD,EAAmB,KAAKX,sBAAL,GAA8B,IAAjD,CAAtB;SARmB,CAAvB;QAUA,OAAO;UACH7E,OAAO,EAAEuF,cADN;UAEHL,EAAE,EAAED;SAFR;;;IAMR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;MAC4B,MAAlBI,kBAAkB,CAAC;QAAEJ,SAAF;QAAa9K,OAAb;QAAsB4K,IAAtB;QAA4B1M;OAA7B,EAAyC;QAC7D,IAAIzE,KAAJ;QACA,IAAI6J,QAAJ;;QACA,IAAI;UACAA,QAAQ,GAAG,MAAMpF,OAAO,CAACgK,gBAAR,CAAyBlI,OAAzB,CAAjB;SADJ,CAGA,OAAOsL,UAAP,EAAmB;UACf,IAAIA,UAAU,YAAYvQ,KAA1B,EAAiC;YAC7BtB,KAAK,GAAG6R,UAAR;;;;QAGR,IAAIR,SAAJ,EAAe;UACXS,YAAY,CAACT,SAAD,CAAZ;;;QAEuC;UACvC,IAAIxH,QAAJ,EAAc;YACVsH,IAAI,CAACpJ,IAAL,CAAW,4BAAX;WADJ,MAGK;YACDoJ,IAAI,CAACpJ,IAAL,CAAW,0DAAD,GACL,yBADL;;;;QAIR,IAAI/H,KAAK,IAAI,CAAC6J,QAAd,EAAwB;UACpBA,QAAQ,GAAG,MAAMpF,OAAO,CAACmK,UAAR,CAAmBrI,OAAnB,CAAjB;;UAC2C;YACvC,IAAIsD,QAAJ,EAAc;cACVsH,IAAI,CAACpJ,IAAL,CAAW,mCAAkC,KAAK/E,SAAU,GAAlD,GAAwD,SAAlE;aADJ,MAGK;cACDmO,IAAI,CAACpJ,IAAL,CAAW,6BAA4B,KAAK/E,SAAU,UAAtD;;;;;QAIZ,OAAO6G,QAAP;;;IAnK4B;;IC9BpC;IACA;AACA;IACA;IACA;IACA;IACA;IAQA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAMkI,WAAN,SAA0B7B,QAA1B,CAAmC;;IAEnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI3M,WAAW,CAAC0J,OAAO,GAAG,EAAX,EAAe;QACtB,MAAMA,OAAN;QACA,KAAKgE,sBAAL,GAA8BhE,OAAO,CAACiE,qBAAR,IAAiC,CAA/D;;;IAGR;IACA;IACA;IACA;IACA;IACA;;;MACiB,MAAPV,OAAO,CAACjK,OAAD,EAAU9B,OAAV,EAAmB;QACe;UACvCC,kBAAM,CAACX,UAAP,CAAkBwC,OAAlB,EAA2BY,OAA3B,EAAoC;YAChC1F,UAAU,EAAE,oBADoB;YAEhCC,SAAS,EAAE,KAAK6B,WAAL,CAAiBjB,IAFI;YAGhCX,QAAQ,EAAE,SAHsB;YAIhCR,SAAS,EAAE;WAJf;;;QAOJ,IAAInB,KAAK,GAAG2I,SAAZ;QACA,IAAIkB,QAAJ;;QACA,IAAI;UACA,MAAMuH,QAAQ,GAAG,CACb3M,OAAO,CAACkJ,KAAR,CAAcpH,OAAd,CADa,CAAjB;;UAGA,IAAI,KAAK0K,sBAAT,EAAiC;YAC7B,MAAMU,cAAc,GAAGjF,OAAO,CAAC,KAAKuE,sBAAL,GAA8B,IAA/B,CAA9B;YACAG,QAAQ,CAACrJ,IAAT,CAAc4J,cAAd;;;UAEJ9H,QAAQ,GAAG,MAAM7C,OAAO,CAAC0K,IAAR,CAAaN,QAAb,CAAjB;;UACA,IAAI,CAACvH,QAAL,EAAe;YACX,MAAM,IAAIvI,KAAJ,CAAW,uCAAD,GACX,GAAE,KAAK2P,sBAAuB,WAD7B,CAAN;;SAVR,CAcA,OAAO7I,GAAP,EAAY;UACR,IAAIA,GAAG,YAAY9G,KAAnB,EAA0B;YACtBtB,KAAK,GAAGoI,GAAR;;;;QAGmC;UACvC3I,MAAM,CAACQ,cAAP,CAAsBiB,QAAQ,CAACwP,aAAT,CAAuB,KAAKnN,WAAL,CAAiBjB,IAAxC,EAA8CiE,OAA9C,CAAtB;;UACA,IAAIsD,QAAJ,EAAc;YACVpK,MAAM,CAACK,GAAP,CAAY,4BAAZ;WADJ,MAGK;YACDL,MAAM,CAACK,GAAP,CAAY,4CAAZ;;;UAEJoB,QAAQ,CAAC0P,kBAAT,CAA4B/G,QAA5B;UACApK,MAAM,CAACS,QAAP;;;QAEJ,IAAI,CAAC2J,QAAL,EAAe;UACX,MAAM,IAAIvG,YAAJ,CAAiB,aAAjB,EAAgC;YAAET,GAAG,EAAE0D,OAAO,CAAC1D,GAAf;YAAoB7C;WAApD,CAAN;;;QAEJ,OAAO6J,QAAP;;;IAnE2B;;IC3BnC;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;;IACA,SAASmI,YAAT,GAAwB;MACpB1S,IAAI,CAAC+G,gBAAL,CAAsB,UAAtB,EAAkC,MAAM/G,IAAI,CAAC2S,OAAL,CAAaC,KAAb,EAAxC;IACH;;;;;;;;;;;"}